package com.joker.core.common

/**
 * Constants
 *
 * @author joker
 * @date 2019/1/22.
 */

/**
 * 手机号码正则 "^((13[0-9])|(14[5,7,9])|(15[^4])|(18[0-9])|(17[0,1,3,5,6,7,8]))\\d{8}$"
 * [1]"代表第1位为数字1，"[3,5,8]"代表第二位可以为3、5、8中的一个，"\\d{9}"代表后面是可以是0～9的数字，有9位。
 *
 * 移动号段: 134,135,136,137,138,139,147,150,151,152,157,158,159,170,178,182,183,184,187,188,198
 * 联通号段: 130,131,132,145,155,156,166,170,171,175,176,185,186
 * 电信号段: 133,149,153,170,173,177,180,181,189,199
 *
 * ①130-139这十个前三位已经全部开通，后面8位每一位都是0-9之间的任意数；
 * ②14开头的目前只有145、147、149三位，后面8位每一位都是0-9之间的任意数；
 * ③15开头的除了154以外第三位可以随意取，后面8位每一位都是0-9之间的任意数；
 * ④16开头的除了1566以外其他没有，后面8位每一位都是0-9之间的任意数；
 * ⑤180-189这十个前三位已经全部开通，后面8位每一位都是0-9之间的任意数；
 * ⑥17开头的目前有170、171、173、175、176、177、178这七位，后面8位每一位都是0-9之间的任意数；
 * ⑦19开头的目前有198、199这两位，后面8位每一位都是0-9之间的任意数；
 */
const val TELEPHONE_REGEX = """^((13[0-9])|(14[5,7,9])|(15[^4])|16[6]|(18[0-9])|(19[8,9])|(17[0,1,3,5,6,7,8]))\d{8}$"""

/**
 * 1. @之前必须有内容且只能是字母（大小写）、数字、下划线(_)、减号（-）、点（.）
 * 2. @和最后一个点（.）之间必须有内容且只能是字母（大小写）、数字、点（.）、减号（-），且两个点不能挨着
 * 3. 最后一个点（.）之后必须有内容且内容只能是字母（大小写）、数字且长度为大于等于2个字节，小于等于6个字节
 */
const val EMAIL_REGEX = """^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}${'$'}"""

/**
 * 用户名正则
 * 只能有中文 字母和数字 长度1-16
 */
const val USER_NAME_REGEX = """^[\u4e00-\u9fa5A-Za-z0-9]{1,16}${'$'}"""

/**
 * 用户密码正则
 * 只能有字母和数字长度限制为6
 */
const val PASSWORD_REGEX = """^[A-Za-z0-9]{6}${'$'}"""

/**
 * HTML标签正则
 */
const val HTML_REGEX = """<\/?[a-zA-Z]+("[^"]*"|'[^']*'|[^'">])*>"""

const val LIST_FIRST_PAGE = 0
const val LIST_PAGE_SIZE = 20